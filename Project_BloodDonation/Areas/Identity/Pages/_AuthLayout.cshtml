@{
    Layout = "/Views/Shared/_Layout.cshtml";
}
@*<div class="row justify-content-center">
    <div class="col-5 Authmt">*@
@*        <div class="card login-logout-card">*@
       @*     <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs">
                    <li class="nav-item">
                  <a href="#" class="nav-link" id="btnLogin">Log In</a>
                    </li>
                    <li class="nav-item">                     
                  <input class="nav-link" type="button" name="theButton" value="Register"
                         id="btnRegi">
                    </li>
                </ul>
            </div>*@


<div class="d-flex flex-column flex-root">
		<div class="d-flex flex-column flex-column-fluid bgi-position-y-bottom position-x-center bgi-no-repeat bgi-size-contain bgi-attachment-fixed" style="background-image: url(assets/media/illustrations/sketchy-1/14.png">
			<div class="d-flex flex-center flex-column flex-column-fluid p-10 pb-lg-20">
				<h1 class="logo me-auto"><a asp-controller="Home" asp-action="Index">Medihelp</a></h1>
				<div class="w-lg-600px bg-body rounded shadow-sm p-10 p-lg-15 mx-auto">					
				<div class="mb-10 text-center">
							<h1 class="text-dark mb-3">Create an Account</h1>
							<div class="text-gray-400 fw-bold fs-4">
								Already have an account?
								<a href="~/Identity/Account/Login" id="btnLogi" class="link-primary fw-bolder">Sign in here</a>
							</div>
						</div>
						<button type="button" class="btn btn-light-primary fw-bolder w-100 mb-10">
							<img alt="Logo" src="assets/media/svg/brand-logos/google-icon.svg" class="h-20px me-3" />Sign in with Google
						</button>
                  </div>
                  </div>
                  </div>
                  </div>

            <div class="card-body">
                <div class="row justify-content-center">
                    <div class="col-10 my-4">
                        @RenderBody()
                    </div>
                </div>
            </div>
    @*    </div>*@
@*    </div>
</div>*@
@section Scripts{

    @await RenderSectionAsync("Scripts", required: false)
    <script>
        $(function () {
           
         var currLoc = $(location).attr('href'); oc = $(location).attr('href');
         console.log("here I am");
          

         //var url = currLoc.slice(window.location.href.indexOf('?') + 1).split('&');
         //console.log(url)
         //var returnUrl ="";
         //var role="";
         //for (var i = 0; i < url.length; i++) {
         //   var urlparam = url[i].split('=');
         //      console.log(urlparam[0] === "role")
         //   if (urlparam[0] === "returnUrl")
         //   {
         //      returnUrl = urlparam[1]
         //   }
         //   if (urlparam[0] === "role") {
         //      role = urlparam[1]
         //      console.log(role)
         //   }
         //}
         //var qstring= "";
         //console.log(role.length)
         //if(returnUrl.length>0)
         //{
         //   qstring = 'ReturnUrl=' + returnUrl;
         //   console.log(qstring)
         //}
         //if (role.length>0) {
         //   qstring = 'role=' + returnUrl;
         //   console.log("role st")
         //   console.log(qstring)
         //}
         
         $("#btnRegi").click(function(){
            var url = currLoc.slice(window.location.href.indexOf('?') + 1).split('&');
            console.log(url)
            var returnUrl = "";
            var role = "";
            debugger;
            for (var i = 0; i < url.length; i++) {
               var urlparam = url[i].split('=');
               console.log(urlparam[0] === "role")
               if (urlparam[0] === "ReturnUrl") {
                  returnUrl = urlparam[1]
               }
               if (urlparam[0] === "role") {
                  role = urlparam[1]
                  console.log(role)
               }
            }
            var qstring = "";
            console.log(role.length)
            if (returnUrl.length > 0) {
               qstring = 'ReturnUrl=' + returnUrl;
               console.log(qstring)
            }
            if (role.length > 0) {
               qstring = 'role=' + role;
               console.log("role st")
               console.log(qstring)
            }
            window.location = '/Identity/Account/Register?'+ qstring;
         })
         $("#btnLogin").click(function () {
            var url = currLoc.slice(window.location.href.indexOf('?') + 1).split('&');
            console.log(url)
            var returnUrl = "";
            var role = "";
            for (var i = 0; i < url.length; i++) {
               var urlparam = url[i].split('=');
               console.log(urlparam[0] === "role")
               if (urlparam[0] === "ReturnUrl") {
                  returnUrl = urlparam[1]
               }
               if (urlparam[0] === "role") {
                  role = urlparam[1]
                  console.log(role)
               }
            }
            var qstring = "";
            console.log(role.length)
            if (returnUrl.length > 0) {
               qstring = 'ReturnUrl=' + returnUrl;
               console.log(qstring)
            }
            if (role.length > 0) {
               qstring   = 'role=' + role  ;
               console.log("role st")
               console.log(qstring)
            }

                      window.location = '/Identity/Account/Login?' + qstring;
         })


         const currentPage = location.pathname;
         console.log(currentPage)

            $('.nav-tabs li a').each(function () {
                const $this = $(this);
                console.log(currentPage.toLowerCase().indexOf($this.attr('href').toLowerCase()))
                if (currentPage.toLowerCase().indexOf($this.attr('href').toLowerCase()) !== -1) {
                    $this.addClass('active');
                }
            })
        })
    </script>
}